#BlueJ class context
comment0.target=CoreTest
comment1.params=
comment1.target=void\ shouldCalculateTheCreditsOfACoreCostume()
comment10.params=
comment10.target=void\ shouldFailWhenHoursExceedThreeTimesCredits()
comment11.params=
comment11.target=void\ shouldAcceptValidCourse()
comment12.params=
comment12.target=void\ shouldFailWhenPercentageIsBelowZero()
comment13.params=
comment13.target=void\ shouldFailWhenPercentageIsAbove100()
comment14.params=
comment14.target=void\ shouldFailWhenCodeExceeds6Characters()
comment15.params=
comment15.target=void\ shouldFindExistingCourse()
comment16.params=
comment16.target=void\ shouldFindExistingCore()
comment2.params=
comment2.target=void\ shouldThrowExceptionIfCoreHasNoCourse()
comment3.params=
comment3.target=void\ shouldThrowExceptionIfThereIsErrorInCredits()
comment4.params=
comment4.target=void\ shouldThrowExceptionIfCreditsIsNotKnown()
comment5.params=
comment5.target=void\ shouldCalculateInPersonHoursWithValidCourses()
comment5.text=\r\n\ Verifica\ que\ el\ c\u00E1lculo\ de\ horas\ presenciales\ estimadas\ se\ realice\ correctamente\r\n\ cuando\ todos\ los\ cursos\ tienen\ datos\ v\u00E1lidos.\r\n
comment6.params=
comment6.target=void\ shouldThrowExceptionWhenEstimatingEmptyCore()
comment6.text=\r\n\ Verifica\ que\ se\ lance\ una\ excepci\u00F3n\ al\ intentar\ estimar\ horas\ presenciales\r\n\ en\ un\ n\u00FAcleo\ sin\ cursos.\r\n
comment7.params=
comment7.target=void\ shouldFormatCoreDataCorrectly()
comment7.text=\r\n\ Verifica\ que\ el\ m\u00E9todo\ {@code\ data()}\ devuelva\ el\ formato\ correcto\r\n\ para\ la\ representaci\u00F3n\ textual\ de\ un\ n\u00FAcleo\ y\ sus\ cursos.\r\n\ \r\n\ @throws\ Plan15Exception\ si\ ocurre\ un\ error\ inesperado\ al\ obtener\ los\ datos.\r\n
comment8.params=
comment8.target=void\ shouldFailWhenAddingUnitWithEmptyName()
comment9.params=
comment9.target=void\ shouldFailWhenAddingCourseWithNonIntegerCredits()
numComments=17
