#BlueJ class context
comment0.target=Plan15
comment0.text=\r\n\ Clase\ que\ representa\ un\ plan\ acad\u00E9mico\ que\ incluye\ cursos\ y\ n\u00FAcleos\ de\ formaci\u00F3n.\r\n\ Permite\ agregar,\ consultar,\ buscar\ y\ listar\ unidades\ acad\u00E9micas.\r\n\ \r\n\ @author\ POOB\r\n\ @version\ ECI\ 2025\r\n
comment1.params=
comment1.target=Plan15()
comment1.text=\r\n\ Crea\ un\ nuevo\ plan\ acad\u00E9mico\ e\ inicializa\ con\ algunas\ unidades\ por\ defecto.\r\n\ \r\n\ @throws\ Plan15Exception\ si\ hay\ errores\ al\ agregar\ las\ unidades\ iniciales.\r\n
comment10.params=
comment10.target=int\ numberUnits()
comment10.text=\r\n\ Consulta\ el\ n\u00FAmero\ total\ de\ unidades\ registradas\ en\ el\ plan.\r\n\ \r\n\ @return\ N\u00FAmero\ de\ unidades.\r\n
comment2.params=
comment2.target=void\ addSome()
comment2.text=\r\n\ Agrega\ cursos\ y\ n\u00FAcleos\ predeterminados\ al\ plan.\r\n\ \r\n\ @throws\ Plan15Exception\ si\ alguno\ de\ los\ cursos\ o\ n\u00FAcleos\ tiene\ datos\ inv\u00E1lidos.\r\n
comment3.params=name
comment3.target=Unit\ consult(java.lang.String)
comment3.text=\r\n\ Consulta\ una\ unidad\ por\ su\ c\u00F3digo.\r\n\ \r\n\ @param\ name\ C\u00F3digo\ de\ la\ unidad\ a\ consultar.\r\n\ @return\ La\ unidad\ encontrada\ o\ null\ si\ no\ existe.\r\n
comment4.params=code\ name\ credits\ inPerson
comment4.target=void\ addCourse(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment4.text=\r\n\ Agrega\ un\ nuevo\ curso\ al\ plan.\r\n\ \r\n\ @param\ code\ C\u00F3digo\ del\ curso.\r\n\ @param\ name\ Nombre\ del\ curso.\r\n\ @param\ credits\ Cr\u00E9ditos\ del\ curso\ (como\ cadena).\r\n\ @param\ inPerson\ Horas\ presenciales\ del\ curso\ (como\ cadena).\r\n\ @throws\ Plan15Exception\ si\ los\ par\u00E1metros\ son\ inv\u00E1lidos.\r\n
comment5.params=code\ name\ percentage\ theCourses
comment5.target=void\ addCore(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Agrega\ un\ nuevo\ n\u00FAcleo\ (Core)\ al\ plan.\r\n\ \r\n\ @param\ code\ C\u00F3digo\ del\ n\u00FAcleo.\r\n\ @param\ name\ Nombre\ del\ n\u00FAcleo.\r\n\ @param\ percentage\ Porcentaje\ del\ n\u00FAcleo\ (como\ cadena).\r\n\ @param\ theCourses\ Lista\ de\ c\u00F3digos\ de\ cursos\ separados\ por\ salto\ de\ l\u00EDnea.\r\n\ @throws\ Plan15Exception\ si\ los\ par\u00E1metros\ son\ inv\u00E1lidos.\r\n
comment6.params=prefix
comment6.target=java.util.ArrayList\ select(java.lang.String)
comment6.text=\r\n\ Selecciona\ las\ unidades\ cuyo\ c\u00F3digo\ comienza\ con\ un\ prefijo\ dado.\r\n\ \r\n\ @param\ prefix\ Prefijo\ de\ los\ c\u00F3digos\ a\ buscar.\r\n\ @return\ Lista\ de\ unidades\ que\ coinciden\ con\ el\ prefijo.\r\n
comment7.params=selected
comment7.target=java.lang.String\ data(java.util.ArrayList)
comment7.text=\r\n\ Retorna\ la\ representaci\u00F3n\ textual\ de\ una\ lista\ de\ unidades\ seleccionadas.\r\n\ \r\n\ @param\ selected\ Lista\ de\ unidades\ seleccionadas.\r\n\ @return\ Texto\ descriptivo\ de\ las\ unidades.\r\n
comment8.params=query
comment8.target=java.lang.String\ search(java.lang.String)
comment8.text=\r\n\ Busca\ unidades\ cuyo\ nombre\ contenga\ el\ texto\ proporcionado.\r\n\ \r\n\ @param\ query\ Texto\ a\ buscar\ en\ los\ nombres\ de\ las\ unidades.\r\n\ @return\ Texto\ con\ las\ unidades\ encontradas\ o\ null\ si\ no\ hay\ coincidencias.\r\n\ @throws\ Plan15Exception\ si\ la\ consulta\ es\ vac\u00EDa\ o\ nula.\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Retorna\ la\ representaci\u00F3n\ textual\ de\ todas\ las\ unidades.\r\n\ \r\n\ @return\ Texto\ descriptivo\ de\ todas\ las\ unidades.\r\n
numComments=11
