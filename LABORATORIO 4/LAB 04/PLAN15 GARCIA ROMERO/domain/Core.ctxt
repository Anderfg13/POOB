#BlueJ class context
comment0.target=Core
comment0.text=\r\n\ Representa\ una\ unidad\ acad\u00E9mica\ de\ tipo\ n\u00FAcleo\ (Core),\ la\ cual\ agrupa\ varios\ cursos.\r\n\ El\ n\u00FAcleo\ define\ un\ porcentaje\ sugerido\ de\ presencialidad\ que\ se\ aplica\ a\ los\ cursos\ \r\n\ asociados\ en\ caso\ de\ que\ no\ se\ disponga\ de\ informaci\u00F3n\ expl\u00EDcita.\r\n
comment1.params=code\ name\ inPersonPercentage
comment1.target=Core(java.lang.String,\ java.lang.String,\ int)
comment1.text=\r\n\ Crea\ una\ nueva\ unidad\ n\u00FAcleo\ con\ c\u00F3digo,\ nombre\ y\ porcentaje\ de\ presencialidad\ sugerido.\r\n\r\n\ @param\ code\ el\ c\u00F3digo\ del\ n\u00FAcleo.\r\n\ @param\ name\ el\ nombre\ del\ n\u00FAcleo.\r\n\ @param\ inPersonPercentage\ el\ porcentaje\ sugerido\ de\ horas\ presenciales\ (entre\ 0\ y\ 100).\r\n
comment2.params=c
comment2.target=void\ addCourse(Course)
comment2.text=\r\n\ Agrega\ un\ curso\ al\ n\u00FAcleo.\r\n\r\n\ @param\ c\ el\ curso\ a\ agregar.\r\n
comment3.params=
comment3.target=int\ credits()
comment3.text=\r\n\ Calcula\ el\ total\ de\ cr\u00E9ditos\ de\ todos\ los\ cursos\ asociados\ al\ n\u00FAcleo.\r\n\r\n\ @return\ la\ suma\ total\ de\ cr\u00E9ditos.\r\n\ @throws\ Plan15Exception\ si\ no\ hay\ cursos\ o\ si\ alg\u00FAn\ curso\ tiene\ cr\u00E9ditos\ inv\u00E1lidos.\r\n
comment4.params=
comment4.target=int\ inPerson()
comment4.text=\r\n\ M\u00E9todo\ sobrescrito\ que\ retorna\ 0\ ya\ que\ la\ unidad\ n\u00FAcleo\ no\ tiene\ horas\ presenciales\ propias.\r\n\r\n\ @return\ 0.\r\n\ @throws\ Plan15Exception\ nunca\ se\ lanza\ en\ esta\ implementaci\u00F3n.\r\n
comment5.params=
comment5.target=int\ creditsEstimated()
comment5.text=\r\n\ Calcula\ los\ cr\u00E9ditos\ estimados\ de\ los\ cursos\ del\ n\u00FAcleo.\r\n\ Si\ un\ curso\ presenta\ error\ al\ obtener\ sus\ cr\u00E9ditos,\ se\ asume\ por\ defecto\ que\ vale\ 3\ cr\u00E9ditos.\r\n\r\n\ @return\ la\ suma\ estimada\ de\ cr\u00E9ditos.\r\n\ @throws\ Plan15Exception\ si\ no\ hay\ cursos.\r\n
comment6.params=
comment6.target=int\ inPersonEstimated()
comment6.text=\r\n\ Calcula\ las\ horas\ presenciales\ estimadas\ para\ los\ cursos\ del\ n\u00FAcleo.\r\n\ <ul>\r\n\ \ \ <li>Si\ un\ curso\ tiene\ horas\ presenciales\ v\u00E1lidas,\ se\ usan\ directamente.</li>\r\n\ \ \ <li>Si\ las\ horas\ presenciales\ no\ se\ conocen,\ se\ estiman\ con\ base\ en\ el\ porcentaje\ del\ n\u00FAcleo.</li>\r\n\ \ \ <li>Si\ hay\ error\ con\ los\ cr\u00E9ditos,\ se\ asume\ 9\ horas\ presenciales\ (3\ cr\u00E9ditos\ *\ 3).</li>\r\n\ </ul>\r\n\r\n\ @return\ el\ total\ estimado\ de\ horas\ presenciales.\r\n\ @throws\ Plan15Exception\ si\ no\ hay\ cursos\ v\u00E1lidos.\r\n
comment7.params=
comment7.target=java.lang.String\ data()
comment7.text=\r\n\ Retorna\ una\ representaci\u00F3n\ detallada\ de\ la\ unidad\ n\u00FAcleo\ y\ sus\ cursos\ asociados.\r\n\r\n\ @return\ una\ cadena\ con\ el\ c\u00F3digo,\ nombre,\ porcentaje\ de\ presencialidad\ y\ detalle\ de\ los\ cursos.\r\n\ @throws\ Plan15Exception\ si\ ocurre\ error\ al\ generar\ los\ datos\ de\ alg\u00FAn\ curso.\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Representaci\u00F3n\ corta\ de\ la\ unidad\ n\u00FAcleo\ (c\u00F3digo\ y\ nombre).\r\n\r\n\ @return\ representaci\u00F3n\ textual\ del\ n\u00FAcleo.\r\n
comment9.params=
comment9.target=java.lang.String\ getName()
comment9.text=\r\n\ Devuelve\ el\ nombre\ de\ la\ unidad\ n\u00FAcleo.\r\n\r\n\ @return\ el\ nombre.\r\n
numComments=10
